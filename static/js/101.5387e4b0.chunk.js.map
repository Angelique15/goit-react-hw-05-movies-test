{"version":3,"file":"static/js/101.5387e4b0.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/simplelightbox/dist/simple-lightbox.esm.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.com\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.14.1\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    this.close();\n                    return;\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    getCaptionElement(elem) {\n        // look at sibling selector\n        if( this.options.captionSelector.startsWith('+')) {\n            let selector = this.options.captionSelector.replace(/^\\+/, '').trimStart();\n            let sibling = elem.nextElementSibling;\n            if(sibling.matches(selector)) {\n                return sibling;\n            }\n            return false;\n        }\n        else if( this.options.captionSelector.startsWith('>') ) {\n            let selector = this.options.captionSelector.replace(/^>/, '').trimStart();\n            return elem.querySelector(selector);\n        }\n        else {\n            return elem.querySelector(this.options.captionSelector);\n        }\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight + 'px';\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            if(this.options.overlay) {\n                document.body.removeChild(this.domNodes.overlay);\n            }\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    if(!this.currentImage) return;\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : this.getCaptionElement(this.relatedElements[this.currentImageIndex]);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                // event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download && this.domNodes.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem, position = 0) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        if(position > 0) {\n            elem = this.elements[position];\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    openPosition(position) {\n        let elem = this.elements[position];\n        this.open(elem, position)\n    }\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SimpleLightbox","elements","options","sourceAttr","overlay","overlayOpacity","spinner","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","download","window","test","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","this","assign","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","Array","from","document","querySelectorAll","length","relatedElements","transitionPrefix","calculateTransitionPrefix","transitionCapable","initialLocationHash","hash","getRelated","imgArr","filter","element","src","getAttribute","indexOf","push","createDomNodes","domNodes","wrapper","appendChild","closeButton","navigation","addEventListener","eventNamespace","event","isValidLink","currentTarget","preventDefault","isAnimating","initialImageIndex","openImage","isOpen","target","body","parentElement","classList","contains","throttle","controlCoordinates","currentImage","setAttribute","loadImage","addEvents","supportsPassive","opts","get","removeEventListener","e","elem","startsWith","selector","replace","trimStart","sibling","nextElementSibling","matches","querySelector","tagName","id","parentNode","str","classes","trim","split","i","childIndex","previousElementSibling","generateQuerySelector","createElement","add","dataset","opacityTarget","innerHTML","counter","downloadLink","textContent","caption","captionClasses","image","func","limit","inThrottle","apply","arguments","setTimeout","RegExp","s","documentElement","style","scrollbarWidth","scrollDiv","offsetWidth","clientWidth","removeChild","type","fixedElements","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","isAppleDevice","paddingRight","parseInt","getComputedStyle","getScrollbarWidth","originalPaddingRight","forEach","actualPadding","calculatedPadding","parseFloat","remove","padding","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","fadeOut","toggleScrollbar","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","loadedImages","direction","slideDirection","newIndex","slide","show","adjustImage","preload","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","updateURL","captionContainer","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","getCaptionElement","hide","setCaption","min","max","bind","hashchangeHandler","getElementsByTagName","match","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","setZoomData","clientX","clientY","touches","sqrt","isTouchDevice","possibleDir","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newHash","newURL","href","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","clearTimeout","historyUpdateTimeout","updateHash","speed","pos","targetURL","events","callback","wrap","namespaces","passive","duration","getPropertyValue","isFadeIn","step","fade","currentOpacity","requestAnimationFrame","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","position","jQuery","open","off","destroy","constructor","global"],"sourceRoot":""}