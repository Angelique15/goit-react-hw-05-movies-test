{"version":3,"file":"static/js/263.85689dde.chunk.js","mappings":"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","sources":["styles/CastStyles.js","components/Cast.jsx","styles/MovieDetailsStyles.js","components/MovieDetails.jsx","styles/ReviewStyles.js","components/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  text-align: center;\n`;\n\nexport const CastTitle = styled.h2`\n  color: #333;\n  cursor: Pointer;\n\n  &:hover {\n    color: #c66c6c\n  }\n`;\n\nexport const CastList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  margin: 10px;\n  text-align: center;\n`;\n\nexport const CastImage = styled.img`\n  width: 200px;\n  height: auto;\n  margin: 30px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieCast } from '../services/Movies.API';\nimport { CastContainer, CastTitle, CastList, CastItem, CastImage } from '../styles/CastStyles';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      const movieCast = await getMovieCast(parseInt(movieId, 10));\n      setCast(movieCast);\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <CastContainer>\n      <CastTitle onClick={handleExpand}>Cast</CastTitle>\n      {expanded && (\n        <CastList>\n          {cast.map((actor) => (\n            <CastItem key={actor.id}>\n              <CastImage src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} />\n              <p>{actor.name}</p>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </CastContainer>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div`\nmargin: 80px auto;\n  padding: 80px;\n  justify-content: center;\n  align-items: center;\n  margin-left: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  color: #333;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: auto;\n  margin-bottom: 10px;\n  margin-right: 30px;\n`;\n\nexport const MovieDetailsContent = styled.div`\n  flex: 1;\n  margin-left: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../services/Movies.API';\nimport SimpleLightbox from 'simplelightbox/dist/simple-lightbox.esm';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport {\n  MovieDetailsContainer,\n  MovieTitle,\n  MovieInfo,\n  MovieImage,\n  MovieDetailsContent,\n} from '../styles/MovieDetailsStyles';\nimport Reviews from './Reviews';\nimport Cast from './Cast';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movieDetails = await getMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    const lightbox = new SimpleLightbox('.movie-image');\n    lightbox.on('show.simplelightbox', () => {\n      document.body.style.overflow = 'hidden';\n    });\n    lightbox.on('closed.simplelightbox', () => {\n      document.body.style.overflow = 'auto';\n    });\n  }, []);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <MovieDetailsContainer>\n      <MovieTitle>{movie.title}</MovieTitle>\n      <MovieInfo>\n        <MovieImage className=\"movie-image\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n        <MovieDetailsContent>\n          <p>Release Date: {movie.release_date ? movie.release_date : 'N/A'}</p>\n          <p>Overview: {movie.overview}</p>\n          <Reviews movieId={movieId} />\n          <Cast movieId={movieId} />\n        </MovieDetailsContent>\n      </MovieInfo>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n margin: 80px auto;\n  text-align: left;\n  border-top: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  padding: 80px;\n`;\n\nexport const ReviewsTitle = styled.h2`\ntext-align: center;\ncursor: pointer;\n&:hover {\n    color: #b54f4f;\n  }\n\n`;\n\n\nexport const ReviewAuthor = styled.a`\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n  text-align: left;\n`;\n\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../services/Movies.API';\nimport PropTypes from 'prop-types';\nimport { ReviewsContainer, ReviewsTitle, ReviewAuthor } from '../styles/ReviewStyles';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews);\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div>\n      <ReviewsTitle onClick={handleExpand}>Reviews</ReviewsTitle>\n      {expanded && reviews.length > 0 ? (\n        <ReviewsContainer>\n          {reviews.map((review) => (\n            <div key={review.id}>\n              <ReviewAuthor href={review.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {review.author}\n              </ReviewAuthor>\n              <p>{review.content}</p>\n            </div>\n          ))}\n        </ReviewsContainer>\n      ) : (\n        expanded && <p>We don't have any reviews for this movie!</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"names":["CastContainer","styled","CastTitle","CastList","CastItem","CastImage","movieId","useState","cast","setCast","expanded","setExpanded","useEffect","fetchMovieCast","getMovieCast","parseInt","movieCast","onClick","map","actor","src","profile_path","alt","name","id","MovieDetailsContainer","MovieTitle","MovieInfo","MovieImage","MovieDetailsContent","useParams","movie","setMovie","fetchMovieDetails","getMovieDetails","movieDetails","lightbox","SimpleLightbox","on","document","body","style","overflow","title","className","poster_path","release_date","overview","Reviews","Cast","ReviewsContainer","ReviewsTitle","ReviewAuthor","reviews","setReviews","fetchMovieReviews","getMovieReviews","movieReviews","length","review","href","url","target","rel","author","content"],"sourceRoot":""}